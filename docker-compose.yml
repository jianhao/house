services:
  # PostgreSQL 数据库
  postgres:
    image: postgis/postgis:15-3.3
    container_name: house-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: house_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./house-server/migrations:/docker-entrypoint-initdb.d
    networks:
      - house-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: house-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - house-network

  # 后端服务
  house-server:
    build:
      context: ./house-server
      dockerfile: Dockerfile
    container_name: house-server
    restart: unless-stopped
    env_file:
      - ./house-server/.env.production
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password@postgres:5432/house_db?sslmode=disable
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: house_db
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: redis://redis:6379
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - house-network
    volumes:
      - ./house-server/uploads:/app/uploads

  # 前端服务
  house-web:
    build:
      context: ./house-web
      dockerfile: Dockerfile
    container_name: house-web
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - house-server
    networks:
      - house-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: house-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - house-web
      - house-server
    networks:
      - house-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  house-network:
    driver: bridge